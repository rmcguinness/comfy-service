# Stage 1: Build the Go application
FROM golang:1.22-alpine AS go_builder

WORKDIR /app

# Copy go.mod and go.sum first to leverage Docker cache
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# Copy the rest of your Go application source code
# Assuming your Go app root (where go.mod is) is at the same level as this Dockerfile
# and contains cmd/server/main.go and other packages like internal/, comfyui/
COPY . .

# Compile the Go application
# Adjust the path to your main.go if it's different
# This creates a static binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o /go-api-server ./cmd/server/main.go


# Stage 2: Setup ComfyUI and the final runtime environment
# Use a base image with Python and CUDA support appropriate for the GPU you'll select
FROM python:3.11-slim
# FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04 # Example NVIDIA base image

LABEL maintainer="Your Name <your.email@example.com>"
LABEL description="ComfyUI with Go Gin API frontend, managed by Supervisor"

WORKDIR /

# Install git, supervisor, and other dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    wget \
    supervisor \
    # Add any other system dependencies needed by Python or Go app
    && rm -rf /var/lib/apt/lists/*

# --- ComfyUI Setup ---
RUN git clone https://github.com/comfyanonymous/ComfyUI.git
WORKDIR /ComfyUI
RUN python -m venv /ComfyUI/venv
# Activate venv and install requirements
RUN . /ComfyUI/venv/bin/activate && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir xformers # Often needed for performance

# --- Go API Server Setup ---
WORKDIR /app
COPY --from=go_builder /go-api-server /app/go-api-server
# Ensure the Go binary is executable
RUN chmod +x /app/go-api-server

# --- Supervisor Setup ---
# Copy supervisor configuration file (create supervisord.conf next to your Dockerfile)
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Optional: Create log directories for supervisor if not using stdout/stderr
RUN mkdir -p /var/log/supervisor

# --- Expose Ports ---
# Port for the Go Gin API (this is what Cloud Run will route traffic to)
EXPOSE 8080
# ComfyUI's internal port (not directly exposed by Cloud Run, but used by Go app)
# EXPOSE 8188 # Not strictly necessary to EXPOSE internal ports

# --- Entrypoint ---
# Start Supervisor to manage both processes
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]